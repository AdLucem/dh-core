
==================== FINAL INTERFACE ====================
2018-12-19 17:11:54.364712566 UTC

interface dense-linear-algebra-0.1.0.0-Elr9WMmlb0BKsm96yzG2PQ:Statistics.Matrix.Types 8043
  interface hash: eb86349fa3c782c51f528ca28766045b
  ABI hash: 29068aaa03b39c75ee604070f2429116
  export-list hash: 3c27e8e7cfdbdce7b7f35aa8883e527b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e883091662de53f54bc2549cf4ba9aba
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Statistics.Matrix.Types.debug
  Statistics.Matrix.Types.MMatrix{Statistics.Matrix.Types.MMatrix}
  Statistics.Matrix.Types.MVector
  Statistics.Matrix.Types.Matrix{Statistics.Matrix.Types.Matrix _vector cols rows}
  Statistics.Matrix.Types.Vector
module dependencies:
package dependencies: array-0.5.2.0 base-4.11.1.0 deepseq-1.4.3.0
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 primitive-0.6.3.0
                      transformers-0.5.5.0 vector-0.12.0.1
orphans: vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Data.Char 3e89818e2b8ef1a2cc5393163484da72
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:GHC.Unicode 8234c40b59f035e845832a42e8725a00
import  -/  base-4.11.1.0:Numeric 331f4a25ce2a0412c13064bb0891b578
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  vector-0.12.0.1:Data.Vector.Unboxed d2cefc1634a6760ea2d3b40a96cd1e81
import  -/  vector-0.12.0.1:Data.Vector.Unboxed.Base 94111a911b49f0bcabb45e8b44a71528
import  -/  vector-0.12.0.1:Data.Vector.Unboxed.Mutable d808ca83fe1744e975f73b50f5364eed
cce97783d4e71efe03047af01f627ce0
  $fEqMatrix :: GHC.Classes.Eq Statistics.Matrix.Types.Matrix
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Statistics.Matrix.Types.Matrix
                  Statistics.Matrix.Types.$fEqMatrix_$c==
                  Statistics.Matrix.Types.$fEqMatrix_$c/= -}
cce97783d4e71efe03047af01f627ce0
  $fEqMatrix_$c/= ::
    Statistics.Matrix.Types.Matrix
    -> Statistics.Matrix.Types.Matrix -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLS),1*U(U,U,U(U,U,U))><S(SLS),1*U(U,U,U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Statistics.Matrix.Types.Matrix)
                   (y :: Statistics.Matrix.Types.Matrix) ->
                 case Statistics.Matrix.Types.$fEqMatrix_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce97783d4e71efe03047af01f627ce0
  $fEqMatrix_$c== ::
    Statistics.Matrix.Types.Matrix
    -> Statistics.Matrix.Types.Matrix -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SSS(SSS)),1*U(U,U,U(U,U,U))><S(SSS(SSS)),1*U(U,U,U(U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Statistics.Matrix.Types.Matrix)
                   (w1 :: Statistics.Matrix.Types.Matrix) ->
                 case w of ww { Statistics.Matrix.Types.Matrix ww1 ww2 ww3 ->
                 case ww3
                        `cast`
                      (Data.Vector.Unboxed.Base.D:R:VectorDouble0[0] ; Data.Vector.Unboxed.Base.N:R:VectorDouble[0]) of ww4 { Data.Vector.Primitive.Vector ww5 ww6 ww7 ->
                 case w1 of ww8 { Statistics.Matrix.Types.Matrix ww9 ww10 ww11 ->
                 case ww11
                        `cast`
                      (Data.Vector.Unboxed.Base.D:R:VectorDouble0[0] ; Data.Vector.Unboxed.Base.N:R:VectorDouble[0]) of ww12 { Data.Vector.Primitive.Vector ww13 ww14 ww15 ->
                 Statistics.Matrix.Types.$w$c==
                   ww1
                   ww2
                   ww5
                   ww6
                   ww7
                   ww9
                   ww10
                   ww13
                   ww14
                   ww15 } } } }) -}
cce97783d4e71efe03047af01f627ce0
  $fShowMatrix :: GHC.Show.Show Statistics.Matrix.Types.Matrix
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Statistics.Matrix.Types.Matrix
                  Statistics.Matrix.Types.$fShowMatrix_$cshowsPrec
                  Statistics.Matrix.Types.debug
                  Statistics.Matrix.Types.$fShowMatrix_$cshowList -}
cce97783d4e71efe03047af01f627ce0
  $fShowMatrix1 ::
    Statistics.Matrix.Types.Matrix
    -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S(SSS(SSS)),1*U(U,U,U(U,U,U))><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Statistics.Matrix.Types.Matrix)
                   (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Statistics.Matrix.Types.debug x))
                   s) -}
cce97783d4e71efe03047af01f627ce0
  $fShowMatrix_$cshowList ::
    [Statistics.Matrix.Types.Matrix] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Statistics.Matrix.Types.Matrix])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Statistics.Matrix.Types.Matrix
                   Statistics.Matrix.Types.$fShowMatrix1
                   ls
                   s) -}
cce97783d4e71efe03047af01f627ce0
  $fShowMatrix_$cshowsPrec ::
    GHC.Types.Int -> Statistics.Matrix.Types.Matrix -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,A><S(SSS(SSS)),1*U(U,U,U(U,U,U))><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Statistics.Matrix.Types.Matrix)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Statistics.Matrix.Types.debug x))
                   s) -}
b6c7ae97ca50843e88a251f5dd92f048
  $tc'MMatrix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6638695518221637443##
                   17134020970726845717##
                   Statistics.Matrix.Types.$trModule
                   Statistics.Matrix.Types.$tc'MMatrix2
                   1#
                   Statistics.Matrix.Types.$tc'MMatrix1) -}
e24b128b65b9367ecdc38d0a433efde7
  $tc'MMatrix1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4484668132a59876e641c527e9906228
  $tc'MMatrix2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Statistics.Matrix.Types.$tc'MMatrix3) -}
60a9ac925b93a6b1fa02936d48ede270
  $tc'MMatrix3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MMatrix"#) -}
2bb780c6301568054031447c2dcda09b
  $tc'Matrix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4405304846012580185##
                   15656628336071348198##
                   Statistics.Matrix.Types.$trModule
                   Statistics.Matrix.Types.$tc'Matrix2
                   0#
                   Statistics.Matrix.Types.$tc'Matrix1) -}
05c5c19db7159eefaeb62bc9b8f7a3b2
  $tc'Matrix1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7c172b2f82660eff78749c30caf62e8a
  $tc'Matrix2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Statistics.Matrix.Types.$tc'Matrix3) -}
2173f499fdaf1b7ae3e94753aaa56104
  $tc'Matrix3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Matrix"#) -}
5b1c40bfb15fa5a4b880a5b84175ecd1
  $tcMMatrix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15373035009995465177##
                   3879242712674894395##
                   Statistics.Matrix.Types.$trModule
                   Statistics.Matrix.Types.$tcMMatrix1
                   0#
                   GHC.Types.krep$*Arr*) -}
77f25217373b71ac366c3bb50564b87b
  $tcMMatrix1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Statistics.Matrix.Types.$tcMMatrix2) -}
c16ecbfa48738cda35a30698dee49649
  $tcMMatrix2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MMatrix"#) -}
807c902a576e300bf6954d6246124a87
  $tcMatrix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1537839582093060273##
                   15365139484205726005##
                   Statistics.Matrix.Types.$trModule
                   Statistics.Matrix.Types.$tcMatrix1
                   0#
                   GHC.Types.krep$*) -}
e42a1851afadf85340c36eaa63c97e5a
  $tcMatrix1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Statistics.Matrix.Types.$tcMatrix2) -}
7f8de3282eb7353fea3ccadeebf0feca
  $tcMatrix2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Matrix"#) -}
355e7ff42e9871013c1b5b66f167c0e7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Statistics.Matrix.Types.$trModule3
                   Statistics.Matrix.Types.$trModule1) -}
8bbbb0f49810e2dd387db22c549340ad
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Statistics.Matrix.Types.$trModule2) -}
b6a1f3d785d9f27f3014d5e7dbb39766
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Statistics.Matrix.Types"#) -}
bf7197ec2ab792c312b62b5783be0589
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Statistics.Matrix.Types.$trModule4) -}
362ab1d2a14f14dc3f40f60b48667fb9
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("dense-linear-algebra-0.1.0.0-Elr9WMmlb0BKsm96yzG2PQ"#) -}
d3f8010d0c30d5d2efbe428d6fe640ca
  $w$c== ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,U><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: GHC.Prim.ByteArray#) ->
                 case GHC.Prim.==# ww ww5 of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> case GHC.Prim.==# ww1 ww6 of lwild1 {
                        DEFAULT -> GHC.Types.False
                        1#
                        -> let {
                             exit :: GHC.Prim.Int# -> GHC.Types.Bool
                               <join 1> {- Arity: 1, Strictness: <S,U> -}
                             = \ (ww10 :: GHC.Prim.Int#)[OneShot] ->
                               case GHC.Prim.>=# ww10 ww8 of lwild2 {
                                 DEFAULT -> GHC.Types.False 1# -> GHC.Types.True }
                           } in
                           letrec {
                             $weq_loop0 :: GHC.Types.SPEC
                                           -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.Bool
                               <join 3> {- Arity: 3, Strictness: <S,1*U><S,U><S,U>, Inline: [0] -}
                             = \ (w :: GHC.Types.SPEC)
                                 (ww10 :: GHC.Prim.Int#)
                                 (ww11 :: GHC.Prim.Int#) ->
                               case w of ds9 { DEFAULT ->
                               case GHC.Prim.>=# ww10 ww3 of lwild2 {
                                 DEFAULT
                                 -> case GHC.Prim.indexDoubleArray#
                                           ww4
                                           (GHC.Prim.+# ww2 ww10) of wild2 { DEFAULT ->
                                    case GHC.Prim.>=# ww11 ww8 of lwild3 {
                                      DEFAULT
                                      -> case GHC.Prim.indexDoubleArray#
                                                ww9
                                                (GHC.Prim.+# ww7 ww11) of wild1 { DEFAULT ->
                                         case GHC.Prim.==## wild2 wild1 of lwild4 {
                                           DEFAULT -> GHC.Types.False
                                           1#
                                           -> $weq_loop0
                                                GHC.Types.SPEC
                                                (GHC.Prim.+# ww10 1#)
                                                (GHC.Prim.+# ww11 1#) } }
                                      1# -> GHC.Types.False } }
                                 1# -> exit ww11 } }
                           } in
                           $weq_loop0 GHC.Types.SPEC 0# 0# } }) -}
404734f284fb4f47e8ad2d27e89cc9f0
  $wdebug ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,U>, Inline: [0] -}
2dd490e03f767b2343352b21460d7d9c
  type role MMatrix nominal
  data MMatrix s
    = MMatrix {-# UNPACK #-}GHC.Types.Int
              {-# UNPACK #-}GHC.Types.Int
              !(Statistics.Matrix.Types.MVector s)
24ef97097a2092880d579ae29a1916c5
  type MVector s =
    Data.Vector.Unboxed.Base.MVector s GHC.Types.Double
cce97783d4e71efe03047af01f627ce0
  data Matrix
    = Matrix {rows :: {-# UNPACK #-}GHC.Types.Int,
              cols :: {-# UNPACK #-}GHC.Types.Int,
              _vector :: !Statistics.Matrix.Types.Vector}
e65f60b97b26d69ec79e5ef9c0024c9e
  type Vector = Data.Vector.Unboxed.Base.Vector GHC.Types.Double
cce97783d4e71efe03047af01f627ce0
  _vector ::
    Statistics.Matrix.Types.Matrix -> Statistics.Matrix.Types.Vector
  RecSel Left Statistics.Matrix.Types.Matrix
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Statistics.Matrix.Types.Matrix) ->
                 case ds of wild { Statistics.Matrix.Types.Matrix dt dt1 ds1 ->
                 ds1 }) -}
cce97783d4e71efe03047af01f627ce0
  cols :: Statistics.Matrix.Types.Matrix -> GHC.Types.Int
  RecSel Left Statistics.Matrix.Types.Matrix
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Statistics.Matrix.Types.Matrix) ->
                 case ds of wild { Statistics.Matrix.Types.Matrix dt dt1 ds1 ->
                 GHC.Types.I# dt1 }) -}
cce97783d4e71efe03047af01f627ce0
  debug :: Statistics.Matrix.Types.Matrix -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SSS(SSS)),1*U(U,U,U(U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Statistics.Matrix.Types.Matrix) ->
                 case w of ww { Statistics.Matrix.Types.Matrix ww1 ww2 ww3 ->
                 case ww3
                        `cast`
                      (Data.Vector.Unboxed.Base.D:R:VectorDouble0[0] ; Data.Vector.Unboxed.Base.N:R:VectorDouble[0]) of ww4 { Data.Vector.Primitive.Vector ww5 ww6 ww7 ->
                 Statistics.Matrix.Types.$wdebug ww1 ww2 ww5 ww6 ww7 } }) -}
cce97783d4e71efe03047af01f627ce0
  rows :: Statistics.Matrix.Types.Matrix -> GHC.Types.Int
  RecSel Left Statistics.Matrix.Types.Matrix
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Statistics.Matrix.Types.Matrix) ->
                 case ds of wild { Statistics.Matrix.Types.Matrix dt dt1 ds1 ->
                 GHC.Types.I# dt }) -}
instance GHC.Classes.Eq [Statistics.Matrix.Types.Matrix]
  = Statistics.Matrix.Types.$fEqMatrix
instance GHC.Show.Show [Statistics.Matrix.Types.Matrix]
  = Statistics.Matrix.Types.$fShowMatrix
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

